server {
  listen       ${PORT};
  server_name  _;

  root  /var/www/azuriom/public;
  index index.php index.html;

  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";

  # ---- Mapeia /assets/* -> /var/www/azuriom/public/* (resolve 404 de vendor/bootstrap etc.)
  location ^~ /assets/ {
    alias /var/www/azuriom/public/;
    # Garante que extensões estáticas sejam servidas diretamente
    location ~* \.(?:css|js|mjs|map|jpg|jpeg|gif|png|svg|ico|webp|ttf|otf|woff|woff2)$ {
      expires 7d;
      access_log off;
      try_files $uri =404;
    }
    # E se não for um arquivo estático conhecido, ainda tenta arquivo/diretório
    try_files $uri $uri/ =404;
  }

  location / {
    try_files $uri $uri/ /index.php?$query_string;
  }

  location ~ \.php$ {
    try_files $uri =404;
    include fastcgi_params;

    # Headers do proxy (HTTPS) + confiança no proxy
    fastcgi_param SCRIPT_FILENAME             $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO                   $fastcgi_path_info;
    fastcgi_param HTTP_X_FORWARDED_PROTO      $http_x_forwarded_proto;
    fastcgi_param HTTP_X_FORWARDED_HOST       $http_x_forwarded_host;
    fastcgi_param HTTP_X_FORWARDED_PORT       $http_x_forwarded_port;
    fastcgi_param HTTP_X_FORWARDED_FOR        $proxy_add_x_forwarded_for;
    fastcgi_param HTTPS                       on;

    fastcgi_index index.php;
    fastcgi_pass   127.0.0.1:9000;

    fastcgi_buffering on;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    fastcgi_read_timeout 180;
  }

  # Arquivos estáticos em caminhos fora de /assets/ (ex.: /vendor, /build, /css, /js)
  location ~* \.(?:css|js|mjs|map|jpg|jpeg|gif|png|svg|ico|webp|ttf|otf|woff|woff2)$ {
    expires 7d;
    access_log off;
    try_files $uri =404;
  }

  client_max_body_size 64m;
}
